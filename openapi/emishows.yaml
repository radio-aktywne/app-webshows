info:
  title: emishows app
  version: 0.7.0
  description: Emission shows ðŸŽ­
openapi: 3.1.0
servers:
  - url: /
paths:
  /events:
    get:
      summary: List events
      description: List events that match the request.
      operationId: EventsList
      parameters:
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Maximum number of events to return.
            default: 10
          description: Maximum number of events to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of events to skip.
          description: Number of events to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to events.
          description: Filter to apply to events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: query
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Advanced query to apply to events.
          description: Advanced query to apply to events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with events.
          description: Relations to include with events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to events.
          description: Order to apply to events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events_models_ListResponse"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    post:
      summary: Create event
      description: Create an event.
      operationId: EventsCreate
      parameters:
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with event.
          description: Relations to include with event.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventCreateInput"
        required: true
      responses:
        "201":
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/emishows_events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
  /events/{id}:
    get:
      summary: Get event
      description: Get an event by ID.
      operationId: EventsIdGet
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with event.
          description: Relations to include with event.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/emishows_events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    delete:
      summary: Delete event
      description: Delete an event by ID.
      operationId: EventsIdDelete
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers: {}
          content:
            application/json:
              schema:
                type: "null"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    patch:
      summary: Update event
      description: Update an event by ID.
      operationId: EventsIdUpdate
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with event.
          description: Relations to include with event.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventUpdateInput"
        required: true
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/emishows_events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
  /ping:
    get:
      summary: Ping
      description: Do nothing.
      operationId: PingPing
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers:
            cache-control:
              schema:
                type: string
              name: cache-control
              in: header
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
          content:
            application/json:
              schema:
                type: "null"
      deprecated: false
  /schedule:
    get:
      summary: List schedules
      description: List event schedules with instances between two dates.
      operationId: ScheduleList
      parameters:
        - name: start
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: >-
              Start time in UTC of the event instances to return. By default,
              the current datetime.
          description: >-
            Start time in UTC of the event instances to return. By default, the
            current datetime.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: end
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: >-
              End time in UTC of the event instances to return. By default, the
              current datetime.
          description: >-
            End time in UTC of the event instances to return. By default, the
            current datetime.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Maximum number of events to return.
            default: 10
          description: Maximum number of events to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of events to skip.
          description: Number of events to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to events.
          description: Filter to apply to events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with events.
          description: Relations to include with events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to events.
          description: Order to apply to events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/schedule_models_ListResponse"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
  /shows:
    get:
      summary: List shows
      description: List shows that match the request.
      operationId: ShowsList
      parameters:
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Maximum number of shows to return.
            default: 10
          description: Maximum number of shows to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of shows to skip.
          description: Number of shows to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to shows.
          description: Filter to apply to shows.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with shows.
          description: Relations to include with shows.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to shows.
          description: Order to apply to shows.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shows_models_ListResponse"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    post:
      summary: Create show
      description: Create a show.
      operationId: ShowsCreate
      parameters:
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with show.
          description: Relations to include with show.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShowCreateInput"
        required: true
      responses:
        "201":
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
  /shows/{id}:
    get:
      summary: Get show
      description: Get a show by ID.
      operationId: ShowsIdGet
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with show.
          description: Relations to include with show.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    delete:
      summary: Delete show
      description: Delete a show by ID.
      operationId: ShowsIdDelete
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers: {}
          content:
            application/json:
              schema:
                type: "null"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
    patch:
      summary: Update show
      description: Update a show by ID.
      operationId: ShowsIdUpdate
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include with show.
          description: Relations to include with show.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShowUpdateInput"
        required: true
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  ValidationException:
                    value:
                      status_code: 400
                      detail: Bad Request
                      extra: {}
      deprecated: false
  /sse:
    get:
      summary: Get SSE stream
      description: Get a stream of Server-Sent Events.
      operationId: SseSubscribe
      responses:
        "200":
          description: Request fulfilled, document follows
          headers:
            content-length:
              schema:
                type: string
              name: ""
              in: header
              description: File size in bytes
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
            last-modified:
              schema:
                type: string
                format: date-time
              name: ""
              in: header
              description: Last modified data-time in RFC 2822 format
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
            etag:
              schema:
                type: string
              name: ""
              in: header
              description: Entity tag
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
          content:
            "":
              schema:
                type: string
                contentMediaType: application/octet-stream
      deprecated: false
components:
  schemas:
    events_models_ListResponse:
      properties:
        count:
          type: integer
          title: ListResponse.Count
          description: Number of events that matched the request.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Limit
          description: Maximum number of returned events.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Offset
          description: Number of events skipped.
        events:
          items:
            $ref: "#/components/schemas/emishows_events_models_Event"
          type: array
          title: ListResponse.Events
          description: Events that matched the request.
      type: object
      required:
        - count
        - events
      title: ListResponse
    schedule_models_ListResponse:
      properties:
        count:
          type: integer
          title: ListResponse.Count
          description: Number of event schedules that matched the request.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Limit
          description: Maximum number of returned event schedules.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Offset
          description: Number of event schedules skipped.
        schedules:
          items:
            $ref: "#/components/schemas/EventSchedule"
          type: array
          title: ListResponse.Schedules
          description: Event schedules that matched the request.
      type: object
      required:
        - count
        - schedules
      title: ListResponse
    shows_models_ListResponse:
      properties:
        count:
          type: integer
          title: ListResponse.Count
          description: Number of shows that matched the request.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Limit
          description: Maximum number of returned shows.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          title: ListResponse.Offset
          description: Number of shows skipped.
        shows:
          items:
            $ref: "#/components/schemas/Show"
          type: array
          title: ListResponse.Shows
          description: Shows that matched the request.
      type: object
      required:
        - count
        - shows
      title: ListResponse
    emishows_events_models_Event:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        showId:
          type: string
        show:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Show"
        start:
          title: Event.Start
          description: Start time of the event in event timezone.
        end:
          title: Event.End
          description: End time of the event in event timezone.
        timezone:
          type: string
          title: Event.Timezone
          description: Timezone of the event.
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Recurrence"
          title: Event.Recurrence
          description: Recurrence of the event.
      type: object
      required:
        - end
        - id
        - showId
        - start
        - timezone
        - type
      title: Event
    prisma_models_Event:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        showId:
          type: string
        show:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Show"
      type: object
      required:
        - id
        - showId
        - type
      title: Event
    Show:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        events:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/prisma_models_Event"
              type: array
      type: object
      required:
        - id
        - title
      title: Show
    Recurrence:
      properties:
        rule:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RecurrenceRule"
          title: Recurrence.Rule
          description: Rule of the recurrence.
        include:
          oneOf:
            - type: "null"
            - items: {}
              type: array
          title: Recurrence.Include
          description: Included dates of the recurrence in event timezone.
        exclude:
          oneOf:
            - type: "null"
            - items: {}
              type: array
          title: Recurrence.Exclude
          description: Excluded dates of the recurrence in event timezone.
      type: object
      required: []
      title: Recurrence
    RecurrenceRule:
      properties:
        frequency:
          type: string
          enum:
            - secondly
            - minutely
            - hourly
            - daily
            - weekly
            - monthly
            - yearly
          title: RecurrenceRule.Frequency
          description: Frequency of the recurrence.
        until:
          oneOf:
            - type: "null"
            - {}
          title: RecurrenceRule.Until
          description: End date of the recurrence in UTC.
        count:
          oneOf:
            - type: "null"
            - type: integer
          title: RecurrenceRule.Count
          description: Number of occurrences of the recurrence.
        interval:
          oneOf:
            - type: "null"
            - type: integer
          title: RecurrenceRule.Interval
          description: Interval of the recurrence.
        bySeconds:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          title: RecurrenceRule.BySeconds
          description: Seconds of the recurrence.
        byMinutes:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          title: RecurrenceRule.ByMinutes
          description: Minutes of the recurrence.
        byHours:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          title: RecurrenceRule.ByHours
          description: Hours of the recurrence.
        byWeekdays:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/WeekdayRule"
              type: array
          title: RecurrenceRule.ByWeekdays
          description: Weekdays of the recurrence.
        byMonthdays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          title: RecurrenceRule.ByMonthdays
          description: Monthdays of the recurrence.
        byYeardays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          title: RecurrenceRule.ByYeardays
          description: Yeardays of the recurrence.
        byWeeks:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          title: RecurrenceRule.ByWeeks
          description: Weeks of the recurrence.
        byMonths:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          title: RecurrenceRule.ByMonths
          description: Months of the recurrence.
        bySetPositions:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          title: RecurrenceRule.BySetPositions
          description: Set positions of the recurrence.
        weekStart:
          type:
            - "null"
            - string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            - null
          title: RecurrenceRule.WeekStart
          description: Start day of the week.
      type: object
      required:
        - frequency
      title: RecurrenceRule
    WeekdayRule:
      properties:
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          title: DayRule.Day
          description: Day of the week.
        occurrence:
          oneOf:
            - type: "null"
            - type: integer
            - type: integer
          title: DayRule.Occurrence
          description: Occurrence of the day in the year.
      type: object
      required:
        - day
      title: WeekdayRule
    EventCreateInput:
      properties:
        id:
          type: string
        showId:
          type: string
        show:
          $ref: "#/components/schemas/ShowCreateNestedWithoutRelationsInput"
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        start:
          type: string
        end:
          type: string
        timezone:
          type: string
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Recurrence"
      type: object
      required:
        - end
        - start
        - timezone
        - type
      title: EventCreateInput
    ShowCreateNestedWithoutRelationsInput:
      properties:
        create:
          $ref: "#/components/schemas/ShowCreateWithoutRelationsInput"
        connect:
          $ref: "#/components/schemas/_ShowWhereUnique_id_Input"
      type: object
      required: []
      title: ShowCreateNestedWithoutRelationsInput
    ShowCreateWithoutRelationsInput:
      properties:
        id:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        title:
          type: string
      type: object
      required:
        - title
      title: ShowCreateWithoutRelationsInput
    _ShowWhereUnique_id_Input:
      properties:
        id:
          type: string
      type: object
      required:
        - id
      title: _ShowWhereUnique_id_Input
    EventUpdateInput:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        show:
          $ref: "#/components/schemas/ShowUpdateOneWithoutRelationsInput"
        start:
          type: string
        end:
          type: string
        timezone:
          type: string
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Recurrence"
      type: object
      required: []
      title: EventUpdateInput
    ShowUpdateOneWithoutRelationsInput:
      properties:
        create:
          $ref: "#/components/schemas/ShowCreateWithoutRelationsInput"
        connect:
          $ref: "#/components/schemas/_ShowWhereUnique_id_Input"
        disconnect:
          type: boolean
        delete:
          type: boolean
      type: object
      required: []
      title: ShowUpdateOneWithoutRelationsInput
    EventSchedule:
      properties:
        event:
          $ref: "#/components/schemas/emishows_events_models_Event"
        instances:
          items:
            $ref: "#/components/schemas/EventInstance"
          type: array
          title: EventSchedule.Instances
          description: Event instances.
      type: object
      required:
        - event
        - instances
      title: EventSchedule
    EventInstance:
      properties:
        start:
          title: EventInstance.Start
          description: Start time of the event instance in event timezone.
        end:
          title: EventInstance.End
          description: End time of the event instance in event timezone.
      type: object
      required:
        - end
        - start
      title: EventInstance
    ShowCreateInput:
      properties:
        id:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        events:
          $ref: "#/components/schemas/EventCreateManyNestedWithoutRelationsInput"
        title:
          type: string
      type: object
      required:
        - title
      title: ShowCreateInput
    EventCreateManyNestedWithoutRelationsInput:
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/EventCreateWithoutRelationsInput"
            - items:
                $ref: "#/components/schemas/EventCreateWithoutRelationsInput"
              type: array
        connect:
          oneOf:
            - $ref: "#/components/schemas/_EventWhereUnique_id_Input"
            - items:
                $ref: "#/components/schemas/_EventWhereUnique_id_Input"
              type: array
      type: object
      required: []
      title: EventCreateManyNestedWithoutRelationsInput
    EventCreateWithoutRelationsInput:
      properties:
        id:
          type: string
        showId:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
      type: object
      required:
        - type
      title: EventCreateWithoutRelationsInput
    _EventWhereUnique_id_Input:
      properties:
        id:
          type: string
      type: object
      required:
        - id
      title: _EventWhereUnique_id_Input
    ShowUpdateInput:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        events:
          $ref: "#/components/schemas/EventUpdateManyWithoutRelationsInput"
      type: object
      required: []
      title: ShowUpdateInput
    EventUpdateManyWithoutRelationsInput:
      properties:
        create:
          items:
            $ref: "#/components/schemas/EventCreateWithoutRelationsInput"
          type: array
        connect:
          items:
            $ref: "#/components/schemas/_EventWhereUnique_id_Input"
          type: array
        set:
          items:
            $ref: "#/components/schemas/_EventWhereUnique_id_Input"
          type: array
        disconnect:
          items:
            $ref: "#/components/schemas/_EventWhereUnique_id_Input"
          type: array
        delete:
          items:
            $ref: "#/components/schemas/_EventWhereUnique_id_Input"
          type: array
      type: object
      required: []
      title: EventUpdateManyWithoutRelationsInput
